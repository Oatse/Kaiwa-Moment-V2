(()=>{"use strict";function e(){try{const e=r();console.log("Updating sidebar with user session:",e);const t=document.getElementById("sidebar-user-avatar"),n=document.getElementById("sidebar-username"),o=document.getElementById("sidebar-login-item"),a=document.getElementById("sidebar-register-item"),s=document.getElementById("sidebar-logout-item");e&&e.token?(console.log("User logged in as:",e.name),t&&(t.src="https://media.tenor.com/PLWtefAc3TMAAAAM/kiana-kaslana.gif",console.log("Updated avatar")),n&&(n.textContent=e.name||"User",console.log("Updated sidebar username to:",n.textContent)),o&&(o.style.display="none",console.log("Hide login item")),a&&(a.style.display="none",console.log("Hide register item")),s&&(s.style.display="block",console.log("Show logout item"))):(console.log("User not logged in, showing as Guest"),t&&(t.src="https://media.tenor.com/PLWtefAc3TMAAAAM/kiana-kaslana.gif"),n&&(n.textContent="Guest"),o&&(o.style.display="block"),a&&(a.style.display="block"),s&&(s.style.display="none"))}catch(e){console.error("Error updating sidebar user info:",e)}}function t(){if(window.innerWidth>1e3)return void console.log("Skipping sidebar initialization for desktop view");console.log("Initializing sidebar for mobile view");const t=document.getElementById("new-sidebar");t&&t.remove();const a=document.getElementById("new-sidebar-overlay");a&&a.remove();const s=r(),i=s&&s.token?s.name:"Guest";console.log("Creating sidebar with initial username:",i);const l=document.createElement("div");l.id="new-sidebar",l.innerHTML=`\n    <div style="display: flex; justify-content: space-between; align-items: center; padding: 20px 20px 0 20px;">\n      <h2 style="margin: 0; font-size: 22px; color: #333;">Menu</h2>\n      <button id="close-sidebar" style="background: none; border: none; font-size: 24px; cursor: pointer;">&times;</button>\n    </div>\n    <div class="user-profile">\n      <img id="sidebar-user-avatar" src="https://media.tenor.com/PLWtefAc3TMAAAAM/kiana-kaslana.gif" alt="User Avatar" class="sidebar-avatar" />\n      <div>\n        <span id="sidebar-username" class="sidebar-username">${i}</span>\n        <p style="margin: 5px 0 0 0; font-size: 14px; color: #777;">Welcome back!</p>\n      </div>\n    </div>\n    <ul class="nav-list">\n      <li><a href="#/"><i class="fas fa-home"></i> Beranda</a></li>\n      <li><a href="#/about"><i class="fas fa-info-circle"></i> About</a></li>\n      <li><a href="#/add" id="sidebar-add-story-link"><i class="fas fa-plus-circle"></i> Tambah Cerita</a></li>\n      <li id="sidebar-login-item" ${s&&s.token?'style="display: none;"':""}><a href="#/login"><i class="fas fa-sign-in-alt"></i> Login</a></li>\n      <li id="sidebar-register-item" ${s&&s.token?'style="display: none;"':""}><a href="#/register"><i class="fas fa-user-plus"></i> Register</a></li>\n      <li id="sidebar-logout-item" ${s&&s.token?"":'style="display: none;"'}><a href="#" id="sidebar-logout-link"><i class="fas fa-sign-out-alt"></i> Logout</a></li>\n    </ul>\n    <div style="padding: 20px; margin-top: 30px; text-align: center; color: #999; font-size: 14px;">\n      <p>© Oatse Rizqy Hendarto</p>\n    </div>\n  `;const d=document.createElement("div");d.id="new-sidebar-overlay",document.body.appendChild(l),document.body.appendChild(d);const c=document.getElementById("hamburger-button");console.log("Hamburger button found:",c),c?c.addEventListener("click",(function(t){console.log("Hamburger button clicked!"),t.preventDefault(),t.stopPropagation(),e(),l.classList.add("active"),d.style.display="block",document.body.classList.add("sidebar-open"),setTimeout((()=>{d.style.opacity="1"}),10)})):console.error("Hamburger button not found");const u=document.getElementById("close-sidebar");u&&u.addEventListener("click",(function(){console.log("Close button clicked"),o(l,d)})),d.addEventListener("click",(function(){console.log("Overlay clicked"),o(l,d)})),l.querySelectorAll("a").forEach((function(e){"sidebar-logout-link"!==e.id&&e.addEventListener("click",(function(){o(l,d)}))})),setTimeout((()=>{const e=document.getElementById("sidebar-logout-link");console.log("Logout link found:",e),e?(e.removeEventListener("click",n),e.addEventListener("click",n),console.log("Logout event listener attached")):console.error("Logout link not found in sidebar")}),100),e(),console.log("Sidebar setup complete")}function n(e){e.preventDefault(),e.stopPropagation(),console.log("🔴 SIDEBAR: Logout button clicked");try{l()?console.log("✅ SIDEBAR: Logout successful - Session cleared"):console.log("❌ SIDEBAR: Logout failed - Could not clear session");const e=document.getElementById("new-sidebar"),t=document.getElementById("new-sidebar-overlay");e&&t&&(o(e,t),console.log("🔵 SIDEBAR: Sidebar closed after logout attempt")),console.log("🔵 SIDEBAR: Redirecting to login page"),window.location.hash="#/login"}catch(e){console.error("❌ SIDEBAR: Error during logout process:",e)}}function o(e,t){e.classList.remove("active"),t.style.opacity="0",setTimeout((()=>{t.style.display="none",document.body.classList.remove("sidebar-open")}),300)}function a(){const e=document.getElementById("new-sidebar");e&&e.remove(),t()}document.addEventListener("click",(function(e){e.target&&("sidebar-logout-link"===e.target.id||e.target.parentElement&&"sidebar-logout-link"===e.target.parentElement.id)&&(console.log("🔍 Document-level click detected on logout link"),n(e))})),window.addEventListener("resize",(function(){const e=document.getElementById("new-sidebar"),n=document.getElementById("new-sidebar-overlay");window.innerWidth>1e3?(e&&(e.classList.remove("active"),e.style.display="none"),n&&(n.style.display="none"),document.body.classList.remove("sidebar-open")):e||t()}));const s="https://story-api.dicoding.dev/v1";let i=null;function r(){if(i)return i;try{const e=document.cookie.split(";");let t="",n="",o="";for(let a=0;a<e.length;a++){const s=e[a].trim();s.startsWith("authToken=")?t=s.substring(10,s.length):s.startsWith("userId=")?n=s.substring(7,s.length):s.startsWith("userName=")&&(o=s.substring(9,s.length))}return t?(i={token:t,userId:n,name:o},i):null}catch(e){return console.error("Error getting user session:",e),null}}function l(){try{i=null,console.log("User session cleared from memory"),document.cookie="authToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=Strict;",document.cookie="userId=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=Strict;",document.cookie="userName=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=Strict;",localStorage.removeItem("authToken"),localStorage.removeItem("userId"),localStorage.removeItem("userName"),console.log("Auth cookies and localStorage cleared successfully");const e=new CustomEvent("userLoggedOut");return document.dispatchEvent(e),console.log("Logout event dispatched"),!0}catch(e){return console.error("Error clearing user session:",e),!1}}const d=class{constructor(e,t){this._view=e,this._model=t,this._storiesPerPage=8,this._stories=[],this._currentPage=1}async loadStories(e){try{const t=await this._model.fetchStories(e);return t&&0!==t.length||this._view.showEmptyStories(),t}catch(e){return console.error("Error loading stories:",e),this._view.showError("Gagal memuat cerita"),[]}}formatDate(e){const t=new Date(e);return new Intl.DateTimeFormat("id-ID",{year:"numeric",month:"long",day:"numeric"}).format(t)}preparePaginationData(e){return{storiesPerPage:this._storiesPerPage,totalPages:Math.ceil(e.length/this._storiesPerPage)}}getStoriesForPage(e,t){const n=(t-1)*this._storiesPerPage,o=Math.min(n+this._storiesPerPage,e.length);return e.slice(n,o)}formatStoryItemHTML(e){return`\n      <div class="story-item" tabindex="0" aria-label="Cerita ${e.name}">\n        <img src="${e.photoUrl}" alt="Foto cerita oleh ${e.name}" />\n        <h3>${e.name}</h3>\n        <span class="story-item-date">  \n        ${new Date(e.createdAt).toLocaleDateString()}  \n        </span>\n        <p>${e.description||e.content||""}</p>\n        <div class="story-author-info">  \n          <svg xmlns="http://www.w3.org/2000/svg" class="story-author-icon" viewBox="0 0 24 24">  \n            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>  \n            <polyline points="22,6 12,13 2,6"></polyline>  \n          </svg>  \n          <span>Diposting oleh: ${e.author||e.name}</span>  \n        </div> \n        \n        <div class="location-info">  \n          <svg xmlns="http://www.w3.org/2000/svg" class="location-pin" viewBox="0 0 24 24">  \n            <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>  \n          </svg>  \n        <span class="location-coordinates">  \n          Lat: ${e.lat||"Tidak tersedia"}, Lon: ${e.lon||"Tidak tersedia"}  \n        </span>  \n      </div>\n      <a href="#/detail/${e.id}" class="detail-link">Lihat Detail →</a>\n      </div>\n    `}isLeafletAvailable(){return"undefined"!=typeof L}prepareMapData(e){return e.filter((e=>e&&e.lat&&e.lon)).map((e=>({lat:e.lat,lon:e.lon,popupContent:`\n        <div class="popup-content">\n          <img src="${e.photoUrl}" alt="Foto cerita oleh ${e.name}" />\n          <h3>${e.name}</h3>\n          <p>${e.description||e.content||""}</p>\n          <p><small>Diposting oleh: ${e.author||e.name}</small></p>\n        </div>\n      `})))}verifyUserLogin(){const e=r();return!(!e||!e.token)||(this._view.showError("Anda harus login terlebih dahulu."),window.location.hash="#/login",!1)}generatePaginationHTML(e,t){let n="";n+=`<button class="pagination-button prev-button" ${1===e?"disabled":""} data-page="${e-1}"><</button>`;for(let o=1;o<=t;o++)n+=`<button class="pagination-button page-number ${o===e?"active":""}" data-page="${o}">${o}</button>`;return n+=`<button class="pagination-button next-button" ${e===t?"disabled":""} data-page="${e+1}">></button>`,n}async initializePage(){const e=r();this._stories=await this.loadStories(e.token),this._stories&&0!==this._stories.length&&(this.renderCurrentPage(),this.setupPaginationListeners(),this.setupMap())}renderCurrentPage(){const e=this.getStoriesForPage(this._stories,this._currentPage);let t="";e.forEach((e=>{t+=this.formatStoryItemHTML(e)})),this._view.renderStories(t);const{totalPages:n}=this.preparePaginationData(this._stories),o=this.generatePaginationHTML(this._currentPage,n);this._view.renderPagination(o),this.setupStoryItemListeners()}setupPaginationListeners(){const e=document.getElementById("pagination");e&&e.addEventListener("click",(e=>{const t=e.target.closest(".pagination-button");if(t&&!t.disabled){const e=parseInt(t.dataset.page,10);this._currentPage=e,this.renderCurrentPage()}}))}setupStoryItemListeners(){document.querySelectorAll(".story-item").forEach((e=>{e.addEventListener("click",(t=>{if(t.target.closest(".detail-link"))return;const n=e.querySelector(".detail-link");n&&(window.location.hash=n.getAttribute("href"))})),e.addEventListener("keydown",(t=>{if("Enter"===t.key){const t=e.querySelector(".detail-link");t&&(window.location.hash=t.getAttribute("href"))}}))}))}setupMap(){if(!this.isLeafletAvailable())return;const e=document.getElementById("map");if(!e)return;const t={OpenStreetMap:L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}),Satellite:L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"})},n=this.prepareMapData(this._stories);this._view.initMap({mapElement:e,baseMaps:t,storiesWithLocation:n})}},c=class{async fetchStories(e){try{return await async function(e=0){try{const t=r(),n=t?{Authorization:`Bearer ${t.token}`}:{},o=await fetch(`${s}/stories?location=${e}`,{headers:n});return(await o.json()).listStory||[]}catch(e){return console.error(e),[]}}(e)}catch(e){return console.error("Error loading stories:",e),[]}}},u=new class{constructor(){this._model=new c,this._presenter=new d(this,this._model)}showError(e){alert(e)}showEmptyStories(){document.getElementById("stories-list").innerHTML="<p>Tidak ada cerita yang tersedia.</p>"}renderStories(e){document.getElementById("stories-list").innerHTML=e}renderPagination(e){document.getElementById("pagination").innerHTML=e}initMap(e){if(!this._presenter.isLeafletAvailable())return void console.warn("Leaflet tidak tersedia, peta tidak dapat ditampilkan");const{mapElement:t,baseMaps:n,storiesWithLocation:o}=e,a=L.map(t).setView([-2.548926,118.0148634],5);return L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(a),L.control.layers(n).addTo(a),o.forEach((e=>{L.marker([e.lat,e.lon]).addTo(a).bindPopup(e.popupContent,{maxWidth:300,closeButton:!0})})),a}async render(){return'\n      <section tabindex="0" aria-label="Daftar Cerita">\n        <div class="header-wrapper">\n          <h1>Daftar Cerita</h1>\n          <button id="add-story-button" class="add-story-button">  \n            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus">  \n              <line x1="12" y1="5" x2="12" y2="19"></line>  \n              <line x1="5" y1="12" x2="19" y2="12"></line>  \n            </svg>  \n            Tambah Story  \n          </button>  \n        </div>\n        <div class="story-wrapper">\n          <div id="stories-list" class="story-list"></div>\n          <div class="pagination-container">\n            <div id="pagination" class="pagination"></div>\n          </div>\n        </div>\n        <div id="map" style="height: 400px; margin-top: 20px;"></div>\n      </section>\n    '}async afterRender(){if(this._presenter.verifyUserLogin())try{await this._presenter.initializePage();const e=document.getElementById("add-story-button");e&&e.addEventListener("click",(()=>{window.location.hash="#/add"}))}catch(e){console.error("Error initializing home page:",e),this.showError("Terjadi kesalahan saat memuat halaman")}}},m=class{constructor(e){this._view=e}getAboutInfo(){return{title:"Biografi Pembuat",photo:"../../images/your-photos.jpg",name:"Oatse Rizqy Hendarto",birthYear:"2004",university:"Universitas Gunadarma",caption:"Seorang pengembang web yang berdedikasi dengan hasrat besar terhadap teknologi dan desain antarmuka pengguna. Saya berfokus pada pembuatan aplikasi yang ramah pengguna serta estetis yang menginspirasi dan mempermudah kehidupan.",detailedBio:"Lahir di Jakarta pada tahun 2004, Rizki Maulana menempuh pendidikan di Universitas Gunadarma dengan jurusan Teknik Informatika. Berbekal semangat belajar yang tinggi dan ketertarikan mendalam pada dunia teknologi,  \n          Oatse berkembang menjadi web developer yang andal dengan keahlian di berbagai teknologi frontend dan backend.  \n          Selain itu, Oatse aktif dalam komunitas teknologi dan sering berbagi pengetahuan lewat artikel dan workshop."}}};function g(e,t="success"){const n=document.createElement("div");n.className=`notification ${t}`,n.textContent=e,document.body.appendChild(n),setTimeout((()=>{n.classList.add("show")}),100),setTimeout((()=>{n.classList.remove("show"),setTimeout((()=>n.remove()),300)}),3e3)}const p=class{constructor(e,t){this._view=e,this._model=t}async submitStory(e){try{const t=this._model.getUserSession(),n=await this._model.submitStory(e);if(n&&!n.error)return g("Cerita berhasil ditambahkan!","success"),{success:!0,userSession:t};throw new Error(n?.message||"Gagal menambahkan cerita.")}catch(e){return g(`Error: ${e.message}`,"error"),{success:!1,error:e.message}}}getFormData(){const e=document.getElementById("story-description").value,t=document.getElementById("story-photo").files[0],n=document.getElementById("story-lat").value||null,o=document.getElementById("story-lon").value||null;return{description:e,photo:t,lat:n?parseFloat(n):null,lon:o?parseFloat(o):null}}},h=class{async submitStory(e){try{const t=r();return t&&t.token?await async function(e){try{const t=r(),n=new FormData;n.append("description",e.description),n.append("photo",e.photo),e.lat&&n.append("lat",e.lat),e.lon&&n.append("lon",e.lon);const o=await fetch(`${s}/stories`,{method:"POST",headers:{Authorization:`Bearer ${t.token}`},body:n});return await o.json()}catch(e){return console.error(e),null}}(e):await async function(e){const t=new FormData;t.append("description",e.description),t.append("photo",e.photo),null!==e.lat&&t.append("lat",e.lat),null!==e.lon&&t.append("lon",e.lon);try{const e=await fetch(`${s}/stories/guest`,{method:"POST",body:t});return await e.json()}catch(e){throw console.error("Error adding story as guest:",e),new Error("Gagal menambahkan cerita sebagai guest.")}}(e)}catch(e){throw console.error("Error submitting story:",e),e}}getUserSession(){return r()}},y=new class{constructor(){this._model=new h,this._presenter=new p(this,this._model)}async render(){return'\n      <section tabindex="0" aria-label="Tambah Cerita" class="add-story-section">\n        <h1 class="form-title">Tambah Cerita</h1>\n        <form id="add-story-form" class="add-story-form">\n          <div class="form-group">\n            <label for="story-description" class="form-label">Deskripsi</label>\n            <textarea id="story-description" name="description" class="form-input" placeholder="Tulis deskripsi cerita Anda..." required></textarea>\n          </div>\n          <div class="form-group">\n            <label for="story-photo" class="form-label">Foto</label>\n            <div class="photo-options">\n              <input type="file" id="story-photo" name="photo" class="form-input" accept="image/*" />\n              <button type="button" id="open-camera" class="form-button">\n                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">  \n                  <path d="M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z"></path>  \n                  <circle cx="12" cy="13" r="3.5"></circle>  \n                  <path d="M16 8.5a2.5 2.5 0 0 0 2.5-2.5"></path>  \n                </svg>  \n              </button>\n            </div>\n            <div id="camera-container" class="camera-container">\n              <video id="camera-stream" autoplay playsinline></video>\n              <button type="button" id="capture-photo" class="form-button">Ambil Foto</button>\n              <button type="button" id="close-camera" class="form-button">Tutup Kamera</button>\n              <canvas id="camera-canvas"></canvas>\n            </div>\n          </div>\n          <div class="form-group">\n            <label for="story-lat" class="form-label">Latitude (Opsional)</label>\n            <input type="number" id="story-lat" name="lat" class="form-input" step="any" placeholder="Contoh: -6.200000" />\n          </div>\n          <div class="form-group">\n            <label for="story-lon" class="form-label">Longitude (Opsional)</label>\n            <input type="number" id="story-lon" name="lon" class="form-input" step="any" placeholder="Contoh: 106.816666" />\n          </div>\n          <div id="map" style="height: 400px;"></div>\n          <button type="submit" class="form-button">Tambah Cerita</button>\n        </form>\n      </section>\n    '}async afterRender(){const e=L.map("map").setView([-6.2,106.816666],13);let t;L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}).addTo(e),e.on("click",(n=>{const{lat:o,lng:a}=n.latlng;document.getElementById("story-lat").value=o,document.getElementById("story-lon").value=a,t?t.setLatLng(n.latlng):t=L.marker(n.latlng).addTo(e)})),this._initCameraFeature(),this._initFormSubmission()}_initCameraFeature(){const e=document.getElementById("open-camera"),t=document.getElementById("camera-container"),n=document.getElementById("camera-stream"),o=document.getElementById("camera-canvas"),a=document.getElementById("capture-photo"),s=document.getElementById("close-camera");let i;const r=()=>{i&&(i.getTracks().forEach((e=>e.stop())),i=null),t.style.display="none"};e.addEventListener("click",(async()=>{try{r(),i=await navigator.mediaDevices.getUserMedia({video:!0}),n.srcObject=i,t.style.display="block"}catch(e){console.error("Gagal membuka kamera:",e),alert("Kamera tidak dapat diakses.")}})),a.addEventListener("click",(()=>{const e=o.getContext("2d");o.width=n.videoWidth,o.height=n.videoHeight,e.drawImage(n,0,0,o.width,o.height),o.toBlob((e=>{const t=new File([e],"photo.jpg",{type:"image/jpeg"}),n=new DataTransfer;n.items.add(t),document.getElementById("story-photo").files=n.files,g("Foto berhasil diambil!","success"),r()}))})),s.addEventListener("click",(()=>{r()})),window.addEventListener("hashchange",(()=>{r()})),document.getElementById("add-story-form").addEventListener("submit",(()=>{r()}))}_initFormSubmission(){document.getElementById("add-story-form").addEventListener("submit",(async e=>{e.preventDefault();const t=this._presenter.getFormData(),n=await this._presenter.submitStory(t);n.success&&(n.userSession&&n.userSession.token?window.location.hash="#/":setTimeout((()=>{location.reload()}),2e3))}))}},b=document.getElementById("register-link");b&&b.addEventListener("click",(e=>{!document.startViewTransition||e.ctrlKey||e.metaKey||(e.preventDefault(),document.documentElement.classList.add("page-transition"),document.startViewTransition((()=>{window.location.hash="#/register"})))}));const v=class{constructor(e,t){this._view=e,this._model=t}async login(t,n){try{const o=await this._model.loginUser(t,n);if(o.error)return g(`Login gagal: ${o.message}`,"error"),{success:!1,message:o.message};{this._model.saveUserSession({token:o.loginResult.token,userId:o.loginResult.userId,name:o.loginResult.name}),e(),a();const t=new CustomEvent("userLoggedIn",{detail:{userId:o.loginResult.userId,name:o.loginResult.name}});return document.dispatchEvent(t),g("Login berhasil!","success"),{success:!0}}}catch(e){return g("Terjadi kesalahan saat login. Silakan coba lagi.","error"),console.error("Login error:",e),{success:!1,message:e.message}}}getLoginFormData(){return{email:document.getElementById("email").value,password:document.getElementById("password").value}}navigateAfterSuccessfulLogin(){window.location.hash="#/"}},f=class{async loginUser(e,t){try{const n=await fetch("https://story-api.dicoding.dev/v1/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})});return await n.json()}catch(e){throw console.error("Login error:",e),e}}saveUserSession(t){!function(t){if(i=t,console.log("User session set:",t),t&&t.token){const e=new Date;e.setTime(e.getTime()+864e5),document.cookie=`authToken=${t.token}; expires=${e.toUTCString()}; path=/; SameSite=Strict`,document.cookie=`userId=${t.userId}; expires=${e.toUTCString()}; path=/; SameSite=Strict`,document.cookie=`userName=${t.name}; expires=${e.toUTCString()}; path=/; SameSite=Strict`,console.log("Auth cookies set with expiry:",e)}try{e(),console.log("Sidebar updated after setting session")}catch(e){console.error("Error updating sidebar after setting session:",e)}}(t)}},w=new class{constructor(){this._model=new f,this._presenter=new v(this,this._model)}async render(){return'\n      <section class="login-section">\n        <div class="form-container">\n          <h2>Login</h2>\n          <form id="login-form">\n            <div class="form-group">\n              <label for="email" class="form-label">Email</label>\n              <input type="email" id="email" name="email" class="form-input" required />\n            </div>\n            <div class="form-group">\n              <label for="password" class="form-label">Password</label>\n              <input type="password" id="password" name="password" class="form-input" required />\n            </div>\n            <button type="submit" class="form-button">Login</button>\n          </form>\n          <p>Belum punya akun? <a href="#/register" id="register-link" class="form-link">Register</a></p>\n        </div>\n      </section>\n    '}async afterRender(){const e=document.getElementById("login-form");e.addEventListener("submit",(async t=>{t.preventDefault();const{email:n,password:o}=this._presenter.getLoginFormData(),a=e.querySelector("button[type='submit']"),s=a.textContent;a.disabled=!0,a.textContent="Logging in...";try{const e=await this._presenter.login(n,o);e.success?this._presenter.navigateAfterSuccessfulLogin():(a.disabled=!1,a.textContent=s,e.message&&this.showError(e.message))}catch(e){a.disabled=!1,a.textContent=s,console.error("Login error:",e),this.showError(e.message||"Terjadi kesalahan saat login")}}))}showError(e){const t=document.createElement("div");t.classList.add("error-message"),t.textContent=e;const n=document.querySelector(".form-container"),o=n.querySelector(".error-message");o&&o.remove(),n.insertBefore(t,document.getElementById("login-form"))}},k=class{constructor(e,t){this._view=e,this._model=t}async register(e,t,n){try{const o=await this._model.registerUser(e,t,n);if(o&&!o.error)return g("Registrasi berhasil! Silakan login.","success"),{success:!0};throw new Error(o?.message||"Registrasi gagal.")}catch(e){return g(`Error: ${e.message}`,"error"),{success:!1,message:e.message}}}getRegisterFormData(){return{name:document.getElementById("name").value,email:document.getElementById("email").value,password:document.getElementById("password").value}}validateFormData(e){const{name:t,email:n,password:o}=e;return t&&""!==t.trim()?n&&n.includes("@")?!o||o.length<8?{isValid:!1,message:"Password minimal 8 karakter"}:{isValid:!0}:{isValid:!1,message:"Email tidak valid"}:{isValid:!1,message:"Nama tidak boleh kosong"}}navigateAfterSuccessfulRegister(){window.location.hash="#/login"}},E=class{async registerUser(e,t,n){try{const o=await fetch("https://story-api.dicoding.dev/v1/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,email:t,password:n})});return await o.json()}catch(e){throw console.error("Register error:",e),e}}},S=new class{constructor(){this._model=new E,this._presenter=new k(this,this._model)}async render(){return'\n      <section class="register-section">\n        <div class="form-container">\n          <h2>Register</h2>\n          <form id="register-form">\n            <div class="form-group">\n              <label for="name" class="form-label">Nama</label>\n              <input type="text" id="name" name="name" class="form-input" required />\n            </div>\n            <div class="form-group">\n              <label for="email" class="form-label">Email</label>\n              <input type="email" id="email" name="email" class="form-input" required />\n            </div>\n            <div class="form-group">\n              <label for="password" class="form-label">Password</label>\n              <input type="password" id="password" name="password" class="form-input" required minlength="8" />\n            </div>\n            <button type="submit" class="form-button">Daftar</button>\n          </form>\n          <p>Sudah punya akun? <a href="#/login" class="form-link">Sign in</a></p>\n        </div>\n      </section>\n    '}async afterRender(){const e=document.getElementById("register-form");e&&e.addEventListener("submit",(async t=>{t.preventDefault();const n=this._presenter.getRegisterFormData(),o=this._presenter.validateFormData(n);if(!o.isValid)return void this.showError(o.message);const a=e.querySelector("button[type='submit']"),s=a.innerHTML;a.disabled=!0,a.innerHTML="Connecting to server...";try{const e=await this._presenter.register(n.name,n.email,n.password);e.success?this._presenter.navigateAfterSuccessfulRegister():(a.disabled=!1,a.innerHTML=s,e.message&&this.showError(e.message))}catch(e){console.error("Register error:",e),a.disabled=!1,a.innerHTML=s,this.showError(e.message||"Terjadi kesalahan saat registrasi")}}))}showError(e){const t=document.createElement("div");t.classList.add("error-message"),t.textContent=e;const n=document.querySelector(".form-container"),o=n.querySelector(".error-message");o&&o.remove(),n.insertBefore(t,document.getElementById("register-form"))}},I=class{constructor(e,t){this._view=e,this._model=t}async getStoryDetail(e){try{return await this._model.fetchStoryDetail(e)||(this._view.showError("Cerita tidak ditemukan"),null)}catch(e){return this._view.showError("Gagal memuat detail cerita"),console.error("Error fetching story details:",e),null}}getDescription(e){return e.description||"Tidak ada deskripsi"}formatDate(e){const t=new Date(e);return new Intl.DateTimeFormat("id-ID",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit"}).format(t)}prepareStoryDetailView(e){return e?{title:e.name,formattedDate:this.formatDate(e.createdAt),description:this.getDescription(e),photoUrl:e.photoUrl,author:e.name,hasLocation:!(!e.lat||!e.lon),location:e.lat&&e.lon?`Lat: ${e.lat.toFixed(6)}, Lon: ${e.lon.toFixed(6)}`:"Lokasi tidak tersedia",lat:e.lat,lon:e.lon}:null}isLeafletAvailable(){return"undefined"!=typeof L}},B=class{async fetchStoryDetail(e){try{return await async function(e){try{const t=r(),n=t?{Authorization:`Bearer ${t.token}`}:{},o=await fetch(`${s}/stories/${e}`,{headers:n}),a=await o.json();return a.error?(console.error("API Error:",a.message),null):a.story}catch(e){return console.error("Error fetching story detail:",e),null}}(e)}catch(e){return console.error("Error fetching story details:",e),null}}getUserSession(){return r()}},T=new class{constructor(){this._model=new B,this._presenter=new I(this,this._model)}showError(e){g(e,"error"),window.location.hash="#/"}async render(){return'\n      <section tabindex="0" aria-label="Detail Cerita" class="detail-section">\n        <div class="detail-container">\n          <div class="detail-header">\n            <button id="back-button" class="back-button">\n              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                <line x1="19" y1="12" x2="5" y2="12"></line>\n                <polyline points="12 19 5 12 12 5"></polyline>\n              </svg>\n              Kembali\n            </button>\n          </div>\n          <h1 id="story-title">Memuat Detail Cerita...</h1>\n          <div id="story-content" class="detail-content">\n            <div class="loading-indicator">\n              <div class="spinner"></div>\n              <p>Memuat konten...</p>\n            </div>\n          </div>\n          <div id="detail-map"></div>\n        </div>\n      </section>\n    '}async afterRender(){document.getElementById("back-button").addEventListener("click",(()=>{window.history.back()}));const e=window.location.hash.match(/#\/detail\/([^/]+)/);if(!e)return void this.showError("ID cerita tidak ditemukan");const t=e[1];try{const e=await this._presenter.getStoryDetail(t);if(!e)return void this.showError("Cerita tidak ditemukan");const n=this._presenter.prepareStoryDetailView(e);document.getElementById("story-title").textContent=n.title,document.getElementById("story-content").innerHTML=`\n        <div class="detail-card">\n          <div class="detail-image-container">\n            <img src="${n.photoUrl}" alt="Foto cerita oleh ${n.author}" class="detail-image" />\n          </div>\n          <div class="detail-info">\n            <div class="detail-meta">\n              <span class="detail-date">${n.formattedDate}</span>\n              <span class="detail-author">Diposting oleh: ${n.author}</span>\n            </div>\n            <p class="detail-description">${n.description}</p>\n            <div class="detail-location">\n              <svg xmlns="http://www.w3.org/2000/svg" class="location-pin" viewBox="0 0 24 24">\n                \x3c!-- SVG path data --\x3e\n              </svg>\n              <span>${n.location}</span>\n            </div>\n          </div>\n        </div>\n      `,this._renderMap(n)}catch(e){console.error("Error fetching story details:",e),this.showError("Gagal memuat detail cerita")}}_renderMap(e){if(!e.hasLocation)return void(document.getElementById("detail-map").style.display="none");const t=this._presenter.isLeafletAvailable(),n=document.getElementById("detail-map");if(t){n.innerHTML='\n        <div class="map-card">\n          <h2 class="map-title">Lokasi Cerita</h2>\n          <div id="map-container" style="height: 400px;"></div>\n        </div>\n      ';const t=L.map("map-container").setView([e.lat,e.lon],13);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}).addTo(t),L.marker([e.lat,e.lon]).addTo(t).bindPopup(`<b>${e.title}</b><br>${e.description}`).openPopup(),setTimeout((()=>{t.invalidateSize()}),100)}else n.innerHTML=`\n        <div class="map-card">\n          <h2 class="map-title">Lokasi Cerita</h2>\n          <div style="padding: 20px; text-align: center; background-color: #f8f9fa; border-radius: 8px;">\n            <p>Peta tidak dapat dimuat. Pastikan koneksi internet Anda aktif.</p>\n            <p>Lokasi: ${e.location}</p>\n          </div>\n        </div>\n      `}},x={"/":u,"/about":new class{constructor(){this._presenter=new m(this)}async render(){const e=this._presenter.getAboutInfo();return`\n      <section class="container about-section" tabindex="0" aria-label="${e.title}">\n        <h1 class="about-title">${e.title}</h1>\n        <div class="about-card">\n          <img src="${e.photo}" alt="Foto Pembuat" class="about-photo" />\n          <div class="about-details">\n            <h2 class="about-name">${e.name}</h2>\n            <p class="about-info">Tahun Lahir: ${e.birthYear}</p>\n            <p class="about-info">Asal Universitas: ${e.university}</p>\n            <p class="about-caption">"${e.caption}"</p>\n          </div>\n        </div>\n      </section>\n    `}async afterRender(){}},"/add":y,"/login":w,"/register":S,"/detail/:id":T};const _={async renderPage(){const e=function(e){let t="";return e.resource&&(t=t.concat(`/${e.resource}`)),e.id&&(t=t.concat("/:id")),t||"/"}(function(e){const t=e.split("/");return{resource:t[1]||null,id:t[2]||null}}(location.hash.replace("#","")||"/")),t=r();if(console.log("Rendering page:",e),console.log("Current hash:",window.location.hash),console.log("User session:",t),t&&t.token){const t=await async function(){try{const e=r();return!(!e||!e.token||!(await fetch(`${s}/stories?size=1`,{method:"GET",headers:{Authorization:`Bearer ${e.token}`}})).ok&&(l(),1))}catch(e){return console.error("Error checking login status:",e),!1}}();if(!t&&"/login"!==e)return console.log("Session tidak valid, redirect ke login"),g("Sesi Anda telah berakhir. Silakan login kembali.","error"),void(window.location.hash="#/login")}if(["/"].includes(e)&&(!t||!t.token)&&"/add"!==e)return console.log("User belum login, redirect ke halaman login"),g("Anda harus login untuk mengakses halaman ini.","error"),void("#/login"!==window.location.hash&&(window.location.hash="#/login"));const n=x[e]||x["/"],o=document.querySelector("main");if(o&&n){if(document.documentElement.classList.add("page-transition"),document.startViewTransition)try{await document.startViewTransition((async()=>{document.body.classList.add("page-transitioning"),o.innerHTML=await n.render(),n.afterRender&&await n.afterRender()})).finished,setTimeout((()=>{document.body.classList.remove("page-transitioning"),document.documentElement.classList.remove("page-transition")}),700)}catch(e){console.error("View Transition error:",e),o.innerHTML=await n.render(),n.afterRender&&await n.afterRender(),document.body.classList.remove("page-transitioning"),document.documentElement.classList.remove("page-transition")}else await o.animate([{opacity:1},{opacity:0}],{duration:400,easing:"cubic-bezier(0.22, 1, 0.36, 1)"}).finished,o.innerHTML=await n.render(),await o.animate([{opacity:0},{opacity:1}],{duration:400,easing:"cubic-bezier(0.22, 1, 0.36, 1)"}).finished,n.afterRender&&await n.afterRender(),document.documentElement.classList.remove("page-transition");a()}else console.error("Main element or page not found")},async updateAuthButtons(){const t=r(),n=document.getElementById("login-button"),o=document.getElementById("register-link"),s=document.getElementById("user-icon"),i=document.getElementById("logout-button"),d=document.getElementById("user-dropdown"),c=document.getElementById("add-story-link"),u=document.getElementById("mobile-user-profile");if(console.log("Updating auth buttons with session:",t),e(),a(),t&&t.token){if(n&&(n.style.display="none"),o&&(o.style.display="none"),s){s.style.display="flex";const e=s.querySelector(".user-avatar");e&&(e.alt=`${t.name}'s Avatar`)}if(c&&(c.style.display="block"),u){u.style.display="flex";const e=u.querySelector(".username");e&&(e.textContent=t.name)}s&&(s.removeEventListener("click",this.userIconClickHandler),this.userIconClickHandler=e=>{e.stopPropagation();const t="block"===d.style.display;d.style.display=t?"none":"block"},s.addEventListener("click",this.userIconClickHandler)),i&&(i.removeEventListener("click",this.logoutHandler),this.logoutHandler=()=>{console.log("Logout clicked from header"),l(),this.updateAuthButtons(),window.location.hash="#/login",window.location.reload()},i.addEventListener("click",this.logoutHandler)),this.documentClickHandler||(this.documentClickHandler=e=>{!d||"block"!==d.style.display||s.contains(e.target)||d.contains(e.target)||(d.style.display="none")},document.addEventListener("click",this.documentClickHandler))}else n&&(n.style.display="block"),o&&(o.style.display="block"),s&&(s.style.display="none"),c&&(c.style.display="none"),u&&(u.style.display="none"),d&&(d.style.display="none")},init(){const e=r();console.log("Initial user session from cookies:",e),window.addEventListener("hashchange",(()=>this.renderPage())),window.addEventListener("load",(()=>{this.renderPage(),this.updateAuthButtons();const e=document.getElementById("login-button");e&&e.addEventListener("click",(()=>{window.location.hash="#/login"}))})),document.addEventListener("userLoggedOut",(()=>{console.log("App received logout event");try{this.updateAuthButtons(),"#/login"!==window.location.hash&&(console.log("Redirecting to login page after logout from app.js"),window.location.hash="#/login",setTimeout((()=>{window.location.reload()}),100))}catch(e){console.error("Error handling logout event:",e)}}))}};document.addEventListener("DOMContentLoaded",(()=>{const n=document.getElementById("hamburger-button");console.log("Hamburger button on load:",n),n&&n.addEventListener("click",(function(e){console.log("Index.js - Hamburger button clicked!"),e.preventDefault(),e.stopPropagation();const t=document.getElementById("new-sidebar"),n=document.getElementById("new-sidebar-overlay");t&&(t.classList.add("active"),console.log("Toggling new sidebar, active:",t.classList.contains("active")),n&&(n.style.display="block",setTimeout((()=>{n.style.opacity="1"}),10)),document.body.classList.add("sidebar-open"))})),_.init(),t(),e(),function(){const e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh",`${e}px`),window.addEventListener("resize",(()=>{const e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh",`${e}px`)}))}()})),document.addEventListener("userLoggedOut",(()=>{console.log("Index.js received logout event");try{e(),refreshSidebar()}catch(e){console.error("Error updating sidebar after logout:",e)}})),document.addEventListener("userLoggedIn",(()=>{console.log("Index.js received login event");try{_&&"function"==typeof _.updateAuthButtons&&_.updateAuthButtons(),e()}catch(e){console.error("Error updating UI after login:",e)}})),document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector(".skip-to-content"),t=document.getElementById("main-content");e&&t&&e.addEventListener("click",(e=>{e.preventDefault(),t.setAttribute("tabindex","-1"),t.focus(),t.scrollIntoView({behavior:"smooth"})}))}))})();